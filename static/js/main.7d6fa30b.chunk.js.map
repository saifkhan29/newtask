{"version":3,"sources":["Helpers/Context.js","components/MainMenu.js","Helpers/QuestionBank.js","components/Quiz.js","components/EndScreen.js","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","MainMenu","useContext","setGameState","gameState","count","setCount","className","onClick","Questions","prompt","optionA","optionB","optionC","optionD","answer","Quiz","score","setScore","useState","currQuestion","setCurrQuestion","optionChosen","setOptionChosen","React","useEffect","setTimeout","parsedCount","Number","localStorage","getItem","setItem","length","console","log","EndScreen","removeItem","Timer","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d6fa30b.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const QuizContext = createContext();\r\n\r\nexport const TimeContext = createContext();","import React, { useState, useContext } from \"react\";\r\nimport { QuizContext } from \"../Helpers/Context\";\r\n\r\nimport \"../App.css\";\r\n\r\nexport default function MainMenu() {\r\n  const { gameState, setGameState, count, setCount } = useContext(QuizContext);\r\n\r\n  const changeComponent = () => {\r\n    setGameState(\"quiz\");\r\n  };\r\n\r\n  \r\n//   React.useEffect(() => {\r\n//     setTimeout(() => setCount(count + 1), 1000);\r\n//   }, [count]);\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <button onClick={changeComponent}>Start Quiz</button>\r\n    </div>\r\n  );\r\n}\r\n","export const Questions = [\r\n    {\r\n        prompt: \"What is 1+3\",\r\n        optionA: \"24\",\r\n        optionB: \"21\",\r\n        optionC: \"4\",\r\n        optionD: \"2\",\r\n        answer: \"C\",\r\n    },\r\n    {\r\n        prompt: \"What is 2+4\",\r\n        optionA: \"24\",\r\n        optionB: \"21\",\r\n        optionC: \"6\",\r\n        optionD: \"2\",\r\n        answer: \"C\",\r\n    },\r\n    {\r\n        prompt: \"What is 7+3\",\r\n        optionA: \"24\",\r\n        optionB: \"21\",\r\n        optionC: \"10\",\r\n        optionD: \"2\",\r\n        answer: \"C\",\r\n    },\r\n    {\r\n        prompt: \"What is 10+3\",\r\n        optionA: \"24\",\r\n        optionB: \"21\",\r\n        optionC: \"13\",\r\n        optionD: \"2\",\r\n        answer: \"C\",\r\n    },\r\n]","import React, { useState, useContext } from \"react\";\r\nimport { Questions } from \"../Helpers/QuestionBank\";\r\nimport { QuizContext } from \"../Helpers/Context\";\r\n\r\nexport default function Quiz() {\r\n  const { score, setScore, setGameState, count, setCount } =\r\n    useContext(QuizContext);\r\n  const [currQuestion, setCurrQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => setCount(count + 1), 1000);\r\n  }, [count]);\r\n\r\n  React.useEffect(() => {\r\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\r\n    setCount(parsedCount);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"count\", count);\r\n  }, [count]);\r\n\r\n  const nextQuestion = () => {\r\n    if (Questions[currQuestion].answer === optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    console.log(optionChosen)\r\n    setCurrQuestion(currQuestion + 1);\r\n  };\r\n\r\n  const previousQuestion = () => {\r\n    if (currQuestion >= 1) {\r\n      setCurrQuestion(currQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const submit = () => {\r\n    if (Questions[currQuestion].answer === optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setGameState(\"endScreen\");\r\n  };\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <h1>{Questions[currQuestion].prompt}</h1>\r\n      <div className=\"options\">\r\n        <button\r\n          className=\"button1\"\r\n          onClick={() => {\r\n            setOptionChosen(\"A\");\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {Questions[currQuestion].optionA}{\" \"}\r\n        </button>\r\n        <button\r\n          className=\"button1\"\r\n          onClick={() => {\r\n            setOptionChosen(\"B\");\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {Questions[currQuestion].optionB}{\" \"}\r\n        </button>\r\n        <button\r\n          className=\"button1\"\r\n          onClick={() => {\r\n            setOptionChosen(\"C\");\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {Questions[currQuestion].optionC}{\" \"}\r\n        </button>\r\n        <button\r\n          className=\"button1\"\r\n          onClick={() => {\r\n            setOptionChosen(\"D\");\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {Questions[currQuestion].optionD}{\" \"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"btn2holder\">\r\n        <button onClick={previousQuestion} className=\"button2\">\r\n          Previous Question\r\n        </button>\r\n\r\n        {currQuestion === Questions.length - 1 ? (\r\n          <button onClick={submit} className=\"button2\">\r\n            Submit\r\n          </button>\r\n        ) : (\r\n          <button onClick={nextQuestion} className=\"button2\">\r\n            {\" \"}\r\n            Next Question\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { QuizContext } from '../Helpers/Context'\r\nimport '../App.css'\r\nimport { Questions } from '../Helpers/QuestionBank'\r\n\r\nfunction EndScreen() {\r\n\r\n    React.useEffect(() => {\r\n        localStorage.removeItem(\"count\", count)\r\n      })\r\n\r\n    const { score, setScore, setGameState, count, setCount } = useContext(QuizContext);\r\n    \r\n    const restartQuiz = () => {\r\n        setScore(0)\r\n        setGameState(\"menu\");\r\n        setCount(0)\r\n        console.log(setScore)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"quizOver\">\r\n            <h1>Quiz Finished</h1>\r\n            <h2>Your Score :</h2>\r\n            <h3>{score}/{Questions.length}</h3>\r\n            <button onClick={restartQuiz}>Restart Quiz</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndScreen;\r\n","import React , { useState, useContext } from 'react'\r\nimport { QuizContext } from '../Helpers/Context';\r\n\r\n\r\nfunction Timer() {\r\n    const {gameState, setGameState, count, setCount} = useContext(QuizContext);\r\n\r\n//   const [count, setCount] = useState(0);\r\n\r\n  \r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n        <h1 className=\"timer\">Timer : {count}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import \"./App.css\";\nimport React , { useState, useContext } from 'react'\nimport MainMenu from \"./components/MainMenu\";\nimport Quiz from \"./components/Quiz\";\nimport EndScreen from \"./components/EndScreen\";\nimport { QuizContext } from './Helpers/Context';\nimport Timer from './components/Timer';\n\nfunction App() {\n\n  const [gameState, setGameState] = useState(\"menu\");\n  const [score, setScore] = useState(0);\n  const [count, setCount] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      <div className=\"mainCont\">\n      \n      <QuizContext.Provider value={{gameState, setGameState, score, setScore, count, setCount}}>\n      <Timer/>\n      {gameState === \"menu\" && <MainMenu />}\n      {gameState === \"quiz\" && <Quiz/>}\n      {gameState === \"endScreen\" && <EndScreen/>}\n\n      </QuizContext.Provider>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}